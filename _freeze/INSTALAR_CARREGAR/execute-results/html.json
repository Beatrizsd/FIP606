{
  "hash": "6fafab308e4ef928684f4605bd32c4f8",
  "result": {
    "markdown": "---\ntitle: \"\"\n---\n\n\n## **Pacotes**\n\nAlgumas funções são nativas do R, não precisa instalar nenum pacote para ser usada. Porém, algumas funções são provinientes de pacotes específicos que precisam ser instalados para serem usadas. A maioria dos pacotes são disponibilizados através do CRAN (Comprehensive R Archieve Network), que é o repositório oficial do R. Alguns pacotes podem ser instalados através do GitHub.\n\n### Como instalar pacotes do CRAN\n\nPara instalar pacotes, segue o comando menu: tools - install packages, vai abrir uma aba e digita o nome do pacote na opção packages. Ou através do comando \"install.packages(\"nome_do_pacote\")\". Após a instalação do pacote, para usar suas funções, é necessário carregar o parote com a função library(nome do pacote)\n\n\n::: {.cell hash='INSTALAR_CARREGAR_cache/html/unnamed-chunk-1_d15e6fe55de3524bb394b6811624f730'}\n\n```{.r .cell-code}\n#install.packages(\"tidyverse\")\n```\n:::\n\n\n### Como instalar pacotes do GitHub\n\n\n::: {.cell hash='INSTALAR_CARREGAR_cache/html/unnamed-chunk-2_e1e8cfce57a8bf5204f44c5a12398a80'}\n\n```{.r .cell-code}\n#install_github(\"emdelponte/r4pde\")\n```\n:::\n\n\n### **Carregar pacote**\n\nApós a instalação do pacote, para usar suas funções, é necessário carregar o parote com a função library(nome do pacote)\n\n\n::: {.cell hash='INSTALAR_CARREGAR_cache/html/unnamed-chunk-3_2b34d810c7dc0b8ba9f2a8512f307850'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## **Explorando funções do dplyr**\n\nO pacote dplyr carrega automaticamente com o tidyverse. O dplyr possue funções essenciais para explorae os dados, como selec seceliona colunas específicas, filter (filtra linhas),count e etc.\n\n\n::: {.cell hash='INSTALAR_CARREGAR_cache/html/unnamed-chunk-4_2647d76f7508c149f5340de1a8900238'}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\nmagnesio <- read_excel(\"dados-diversos.xlsx\")\n\n#dentro do conjunto magnesio, selecionar a coluna trat e filtrar dentro de trat o tratamento control\nmagnesio |>\n  select(trat) |> \n  filter(trat == \"control\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 1\n   trat   \n   <chr>  \n 1 control\n 2 control\n 3 control\n 4 control\n 5 control\n 6 control\n 7 control\n 8 control\n 9 control\n10 control\n```\n:::\n\n```{.r .cell-code}\n#demtro do conjunto magnesio, filtrar somente comp menor que 15\nmagnesio |> \n  filter(comp < 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 3\n   trat      rep  comp\n   <chr>   <dbl> <dbl>\n 1 Mg2         1   9  \n 2 Mg2         2  12.5\n 3 Mg2         3  10  \n 4 Mg2         4   8  \n 5 Mg2         5  13.2\n 6 Mg2         6  11  \n 7 Mg2         7  10.8\n 8 Mg2         8   9.5\n 9 Mg2         9  10.8\n10 Mg2        10  10.4\n11 control     1  13.7\n12 control     4  14.2\n13 control     8  14.4\n```\n:::\n\n```{.r .cell-code}\n#selecionar duas colunas\nmagnesio |> \n  select(rep, comp) |> \n  filter(comp < 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 13 × 2\n     rep  comp\n   <dbl> <dbl>\n 1     1   9  \n 2     2  12.5\n 3     3  10  \n 4     4   8  \n 5     5  13.2\n 6     6  11  \n 7     7  10.8\n 8     8   9.5\n 9     9  10.8\n10    10  10.4\n11     1  13.7\n12     4  14.2\n13     8  14.4\n```\n:::\n\n```{.r .cell-code}\nsurvey <- read_excel(\"dados-diversos.xlsx\", sheet = 11)\n\n# função count para contar\nsurvey |> \n  count(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  species     n\n  <chr>   <int>\n1 Fgra      552\n2 Fspp      114\n```\n:::\n\n```{.r .cell-code}\n#como agrupar\nsurvey |> \n  group_by(residue) |>\n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  residue     n\n  <chr>   <int>\n1 corn      169\n2 soybean   281\n3 <NA>      216\n```\n:::\n\n```{.r .cell-code}\n#Criar uma variável nova com mutate\n#criar uma variável extra (log_comp) que é igual ao logaritimo do comprimento\n\nmagnesio |> \n  mutate(log_comp = log(comp))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 4\n   trat      rep  comp log_comp\n   <chr>   <dbl> <dbl>    <dbl>\n 1 Mg2         1   9       2.20\n 2 Mg2         2  12.5     2.53\n 3 Mg2         3  10       2.30\n 4 Mg2         4   8       2.08\n 5 Mg2         5  13.2     2.58\n 6 Mg2         6  11       2.40\n 7 Mg2         7  10.8     2.38\n 8 Mg2         8   9.5     2.25\n 9 Mg2         9  10.8     2.38\n10 Mg2        10  10.4     2.34\n11 control     1  13.7     2.62\n12 control     2  15.9     2.77\n13 control     3  15.7     2.75\n14 control     4  14.2     2.65\n15 control     5  15.9     2.77\n16 control     6  16.5     2.81\n17 control     7  18       2.89\n18 control     8  14.4     2.67\n19 control     9  16.4     2.80\n20 control    10  16       2.77\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}